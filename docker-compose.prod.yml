version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ens-hub-postgres-prod
    environment:
      POSTGRES_DB: ens_hub
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile.prod
    container_name: ens-hub-api-prod
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-secure_password}@postgres:5432/ens_hub
      PORT: 4000
      NODE_ENV: production
      API_KEYS: ${API_KEYS:-}
      CORS_ALLOWLIST: ${CORS_ALLOWLIST:-*}
      LOG_LEVEL: info
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.prod
    container_name: ens-hub-web-prod
    environment:
      NEXT_PUBLIC_API_BASE: http://api:4000
      NEXT_PUBLIC_API_KEY: ${NEXT_PUBLIC_API_KEY:-}
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  nginx:
    image: nginx:alpine
    container_name: ens-hub-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - api
      - web
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: ens-hub-network
